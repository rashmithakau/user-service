name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17  # Adjust based on your project
          distribution: 'corretto'

      # Step 3: Build Spring Boot project with debug logs
      - name: Build with Maven
        run: mvn clean package -DskipTests -X

      # Step 4: Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t rashmithakaushalya/user-service:latest .
          docker push rashmithakaushalya/user-service:latest

      # Step 6: SSH into EC2 and deploy
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu  # Replace if needed
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop user-service-container || true
            docker rm user-service-container || true
            docker rmi $(docker images -q) || true
            docker pull rashmithakaushalya/user-service:latest
            docker run -d -p 8089:8089 --name user-service-container \
              -e "DB_URL=${{ secrets.DB_URL }}" \
              -e "DB_USERNAME=${{ secrets.DB_USERNAME }}" \
              -e "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              rashmithakaushalya/user-service:latest
